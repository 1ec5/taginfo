<table id="overview">
</table>

<h1><%= @key_pp %></h1>

<div class="source-wiki" title="Description from the wiki">
    <%= @desc %>
</div>

<div id="tools">
    <% if @count_all_values < 1000 %>
        [<%= xapi_link('*', @key) %>] [<%= josm_link('*', @key) %>]
    <% else %>
        <span title="Links disabled, because there are too many objects with this key">[XAPI] [JOSM]</span>
    <% end %>
</div>

<form id="filter-form">
    <label for="filter">Filter:</label>
    <select id="filter" name="filter">
        <option value="all"<%=       @sel['all']       %>>No filter</option>
        <option value="nodes"<%=     @sel['nodes']     %>>Nodes only</option>
        <option value="ways"<%=      @sel['ways']      %>>Ways only</option>
        <option value="relations"<%= @sel['relations'] %>>Relations only</option>
    </select>
</form>

<div id="tabs">
    <ul>
        <li><a href="#tabs-values">Values</a></li>
        <li><a href="#tabs-keys">Other Keys</a></li>
        <li><a href="#tabs-map">Map</a></li>
        <li><a href="#tabs-wiki">Wiki</a></li>
        <li><a href="#tabs-josm">JOSM</a></li>
    </ul>
    <div id="tabs-values">
        <h2>Values used with this key</h2>
        <div class="canvas" id="canvas-values"></div>
        <div style="margin-left: 180px;">
            <table id="grid-values">
            </table>
        </div>
    </div>
    <div id="tabs-keys">
        <h2>Other keys used together with this key</h2>
       <table id="grid-keys">
       </table>
        <div class="canvas" id="canvas-keypairs"></div>
    </div>
    <div id="tabs-map">
        <h2>Geographical distribution of this key</h2>
        <p><i>Currently only tags on nodes are shown.</i></p>
        <div style="background-image: url(/img/worldp.png); background-repeat: no-repeat;"/><img src="/api/2/db/keys/distribution?key=<%= @key_uri %>" alt=""/></div>
    </div>
    <div id="tabs-wiki">
        <h2>Wiki pages about this key</h2>
        <table id="wiki-langs">
        </table>
    </div>
    <div id="tabs-josm">
        <h2>JOSM style rules with this key</h2>
        <form>
            <label for="josm-style">Choose style:</label>
            <select id="josm-style" name="josm-style">
                <option>Standard</option>
            </select>
        </form>
       <table id="grid-josm">
       </table>
    </div>
</div>

<iframe id="josmiframe" name="josmiframe"></iframe>

<script type="text/javascript">
    jQuery(function() {
        jQuery('#josm').bind('click', function() {
            jQuery('#josmiframe')[0].src = jQuery('#josm')[0].href;
            return false;
        });

        jQuery('#filter').bind('change', function() {
            var value = this.value;
            window.location.search = 'filter=' + value;
        });

        var tabs = jQuery('#tabs').tabs();

        jQuery.getJSON('/api/2/db/keys/overview?key=<%= @key_uri %>', function(data, textStatus) {
            var table_content = '<tr><th></th><th title="Number of objects with this key">Number of objects</th><th class="values" title="Number of different values">Values</th></tr>';
            table_content += jQuery.map(['all', 'nodes', 'ways', 'relations'], function(obj, i) {
                var d = data[obj];
                return '<tr><td>' + print_image(obj) + '</td><td class="count">' + print_value_with_percent(d.count, d.count_fraction) + '</td><td class="values">' + print_with_ts(d.values) + '</td></tr>';
            }).join('');
            jQuery('#overview').append(table_content);
        });

        jQuery('#grid-values').flexigrid({
            url: '/api/2/db/keys/values?key=<%= @key_uri %>&filter=<%= @filter_type %>',
            method: 'GET',
            dataType: 'json',
            colModel: [
                { display: 'Count', name: 'count', width: 300, sortable: true, align: 'center' },
                { display: 'Value', name: 'value', width: 500, sortable: true, align: 'left' }
            ],
            searchitems: [
                { display: 'Value', name: 'value' }
            ],
            sortname: 'count',
            sortorder: 'desc',
            showToggleBtn: false,
            showTableToggleBtn: false,
            usepager: true,
            useRp: true,
            rpOptions: [10,15,20,25,50,100],
            rp: 15,
            height: 410,
            preProcess: function(data) {
                data.rows = jQuery.map(data.data, function(row, i) {
                    return { 'cell': [
                        print_value_with_percent(row.count, row.fraction),
                        link_to_value(<%= @key_json %>, row.value)
                    ] };
                });
                delete data.data;
                return data;
            }
        });

        jQuery('#grid-keys').flexigrid({
            url: '/api/2/db/keys/keys?key=<%= @key_uri %>&filter=<%= @filter_type %>',
            method: 'GET',
            dataType: 'json',
            colModel: [
                { display: '<span title="Number of objects with this key that also have the other key">Count &rarr;</span>', name: 'to_count', width: 320, sortable: true, align: 'center' },
                { display: '<span title="Key used together with this key">Other key</span>', name: 'other_key', width: 340, sortable: true, align: 'left' },
                { display: '<span title="Number of objects with other key that also have this key">&rarr; Count</span>', name: 'from_count', width: 320, sortable: true, align: 'center' }
            ],
/*            searchitems: [
                { display: 'Other Key', name: 'other_key' }
            ],*/
            sortname: 'to_count',
            sortorder: 'desc',
            showToggleBtn: false,
            showTableToggleBtn: false,
            usepager: true,
            useRp: true,
            rpOptions: [10,15,20,25,50,100],
            rp: 15,
            height: 410,
            preProcess: function(data) {
                data.rows = jQuery.map(data.data, function(row, i) {
                    return { 'cell': [
                        print_value_with_percent(row.together_count, row.to_fraction),
                        link_to_key(row.other_key),
                        print_value_with_percent(row.together_count, row.from_fraction),
                    ] };
                });
                return data;
            }
        });

        jQuery('#grid-josm').flexigrid({
            url: '/api/2/josm/styles/standard/keys?key=<%= @key_uri %>',
            method: 'GET',
            dataType: 'json',
            colModel: [
                { display: 'Value',     name: 'v',         width: 200, sortable: true,  align: 'left'  },
                { display: 'Scale min', name: 'scale_min', width:  80, sortable: true,  align: 'right' },
                { display: 'Scale max', name: 'scale_max', width:  80, sortable: true,  align: 'right' },
                { display: 'Rule XML',  name: 'rule',      width: 100, sortable: false, align: 'left'  }
            ],
            searchitems: [
                { display: 'Value', name: 'v' }
            ],
            sortname: 'v',
            sortorder: 'asc',
            showToggleBtn: false,
            showTableToggleBtn: false,
            usepager: true,
            useRp: true,
            rpOptions: [10,15,20,25,50,100],
            rp: 15,
            height: 410,
            preProcess: function(data) {
                data.rows = jQuery.map(data.data, function(row, i) {
                    return { 'cell': [
                        row.v ? link_to_value(row.k, row.v) : row.b ? (row.b + ' (Boolean)') : '*',
                        print_with_ts(row.scale_min),
                        print_with_ts(row.scale_max),
                        '<span title="' + row.rule + '">XML</span>'
                    ] };
                });
                return data;
            }
        });

        jQuery('#wiki-langs').flexigrid({
            url: '/api/2/wiki/keys?key=<%= @key_uri %>',
            method: 'GET',
            dataType: 'json',
            colModel: [
                { display: 'Language',      name: 'lang',             width: 150, sortable: false },
                { display: 'Wikipage',      name: 'title',            width: 160, sortable: false, align: 'right' },
                { display: 'Description',   name: 'description',      width: 400, sortable: false },
                { display: 'Image',         name: 'image',            width: 120, sortable: false },
                { display: 'Objects',       name: 'objects',          width:  80, sortable: false },
                { display: 'Implied Tags',  name: 'tags_implied',     width: 120, sortable: false },
                { display: 'Combined Tags', name: 'tags_combination', width: 120, sortable: false },
                { display: 'Linked Tags',   name: 'tags_linked',      width: 220, sortable: false }
            ],
            showToggleBtn: false,
            showTableToggleBtn: false,
            usepager: false,
            useRp: false,
            rpOptions: [10,15,20,25,50,100],
            height: 400,
            preProcess: function(data) {
                return {
                    total: data.size,
                    page: 1,
                    rows: jQuery.map(data, function(row, i) {
                        return { 'cell': [
                            print_language(row.lang, row.language),
                            print_wiki_link(row.title),
                            row.description,
                            row.image == null ? '<i>no image</i>' : print_wiki_link(row.image),
                            (row.on_node      ? '<img src="/img/types/node.16.png"     alt="yes"/>' : '<img src="/img/types/none.16.png" alt="no"/>') + ' ' +
                            (row.on_way       ? '<img src="/img/types/way.16.png"      alt="yes"/>' : '<img src="/img/types/none.16.png" alt="no"/>') + ' ' +
                            (row.on_area      ? '<img src="/img/types/area.16.png"     alt="yes"/>' : '<img src="/img/types/none.16.png" alt="no"/>') + ' ' +
                            (row.on_relation  ? '<img src="/img/types/relation.16.png" alt="yes"/>' : '<img src="/img/types/none.16.png" alt="no"/>'),
                            print_key_or_tag_list(row.tags_implies),
                            print_key_or_tag_list(row.tags_combination),
                            print_key_or_tag_list(row.tags_linked)
                        ]};
                    })
                };
            }
        });
    });
</script>
<script type="text/javascript+protovis">

var data = <%= @prevalent_values.to_json() %>;

var w=160, h=440;

var vis = new pv.Panel()
    .canvas('canvas-values')
    .width(w)
    .height(h + 20);

var scale = pv.Scale.linear(0, <%= @count_all_values %>).range(0, h);

vis.add(pv.Layout.Stack)
    .bottom(10)
    .layers(data)
    .x(10)
    .y(function(d) scale(d.count))
  .layer.add(pv.Bar)
    .width(20)
  .anchor('left')
    .add(pv.Label)
    .left(30)
    .text(function(d) d.value);

vis.render();

// =======

jQuery.getJSON('/api/2/db/keys/keys?key=<%= @key_uri %>&filter=<%= @filter_type %>&page=1&rp=100&sortname=to_count&sortorder=desc', function(jsonData, textStatus) {

    var data = jsonData.data;
    jQuery.getJSON('/api/2/db/keys/keys?key=<%= @key_uri %>&filter=<%= @filter_type %>&page=1&rp=100&sortname=from_count&sortorder=desc', function(jsonData_rev, textStatus) {

    data = data.concat(jsonData_rev.data);
/*    var l = jsonData_rev.data.length;
    for(var i=0; i<l; i++) {
        data.push({
           from_fraction:  jsonData_rev.data[i].to_fraction,
           to_fraction:    jsonData_rev.data[i].from_fraction,
           together_count: jsonData_rev.data[i].together_count,
           other_key:      jsonData_rev.data[i].other_key
        });
    }*/

    var w=600, h=600;

    var x = pv.Scale.linear(0, 1).range(0, w),
        y = pv.Scale.linear(0, 1).range(0, h),
        c = pv.Scale.log(10000, 20000000).range("orange", "brown"),
        s = pv.Scale.log(10000, 20000000).range(1, 100);

    var vis_keypairs = new pv.Panel()
        .canvas('canvas-keypairs')
        .width(w)
        .height(h)
        .bottom(20)
        .left(20)
        .right(10)
        .top(5);

    /* Y-axis and ticks. */
    vis_keypairs.add(pv.Rule)
        .data(y.ticks())
        .bottom(y)
        .strokeStyle(function(d) d ? "#eee" : "#000")
    .anchor("left").add(pv.Label)
        .visible(function(d) d > 0 && d < 1)
        .text(y.tickFormat);

    /* X-axis and ticks. */
    vis_keypairs.add(pv.Rule)
        .data(x.ticks())
        .left(x)
        .strokeStyle(function(d) d ? "#eee" : "#000")
    .anchor("bottom").add(pv.Label)
        .visible(function(d) d > 0 && d < 1)
        .text(x.tickFormat);

    /* The dot plot! */
    vis_keypairs.add(pv.Panel)
        .data(data)
    .add(pv.Dot)
        .left(function(d) x(d.from_fraction))
        .bottom(function(d) y(d.to_fraction))
//        .strokeStyle(function(d) c(d.together_count))
        .strokeStyle('brown')
        .fillStyle(function() this.strokeStyle())
//        .fillStyle(function() this.strokeStyle().alpha(.2))
//        .size(function(d) s(d.together_count))
        .size(8)
//        .visible(function(d) d.from_fraction > 0.1 && d.to_fraction > 0.1)
        .title(function(d) d.other_key);

    vis_keypairs.render();
    });
});

</script>
