var create_flexigrid_for = {
    whitespace: function() {
        create_flexigrid('grid-whitespace', {
            url: '/api/2/db/keys?filters=characters_space&include=prevalent_values',
            colModel: [
                { display: texts.osm.key, name: 'key', width: 250, sortable: true },
                { display: '<span title="Number of objects with this key"><img src="/img/types/all.16.png" alt=""/> Total</span>',           name: 'count_all',        width: 250, sortable: true, align: 'center' },
                { display: 'Users', name: 'users_all', width: 44, sortable: true, align: 'right' },
                { display: '<img src="/img/sources/wiki.16.png" alt="Wiki" title="Wiki"/>', name: 'in_wiki', width: 20, sortable: true, align: 'center' },
                { display: '<img src="/img/sources/josm.16.png" alt="JOSM" title="JOSM"/>', name: 'in_josm', width: 20, sortable: true, align: 'center' },
                //   { display: '<img src="/img/sources/potlatch.16.png" alt="Potlatch 2" title="Potlatch 2"/>', name: 'in_potlatch', width: 20, sortable: true, align: 'center' },
                //   { display: '<img src="/img/sources/merkaartor.16.png" alt="Merkaartor" title="Merkaartor"/>', name: 'in_merkaartor', width: 20, sortable: true, align: 'center' },
                { display: '<span title="Number of different values for this key">Values</span>', name: 'values_all', width: 70, sortable: true, align: 'right' },
                { display: 'Prevalent Values', name: 'prevalent_values', width: 500, sortable: true }
            ],
            searchitems: [
                { display: texts.osm.key, name: 'key' }
            ],
            sortname: 'count_all',
            sortorder: 'desc',
            preProcess: function(data) {
                data.rows = jQuery.map(data.data, function(row, i) {
                    return { 'cell': [
                        link_to_key(row.key),
                        print_value_with_percent(row.count_all,       row.count_all_fraction),
                        print_with_ts(row.users_all),
                        row.in_wiki       ? '&#x2714;' : '-',
                        row.in_josm       ? '&#x2714;' : '-',
                    //       row.in_potlatch   ? '&#x2714;' : '-',
                    //       row.in_merkaartor ? '&#x2714;' : '-',
                        print_with_ts(row.values_all),
                        print_prevalent_value_list(row.key, row.prevalent_values)
                    ] };
                });
                return data;
            }
        });
    },
    problematic: function() {
        create_flexigrid('grid-problematic', {
            url: '/api/2/db/keys?filters=characters_problematic&include=prevalent_values',
            colModel: [
                { display: texts.osm.key, name: 'key', width: 250, sortable: true },
                { display: '<span title="Number of objects with this key"><img src="/img/types/all.16.png" alt=""/> Total</span>',           name: 'count_all',        width: 250, sortable: true, align: 'center' },
                { display: 'Users', name: 'users_all', width: 44, sortable: true, align: 'right' },
                { display: '<img src="/img/sources/wiki.16.png" alt="Wiki" title="Wiki"/>', name: 'in_wiki', width: 20, sortable: true, align: 'center' },
                { display: '<img src="/img/sources/josm.16.png" alt="JOSM" title="JOSM"/>', name: 'in_josm', width: 20, sortable: true, align: 'center' },
                //   { display: '<img src="/img/sources/potlatch.16.png" alt="Potlatch 2" title="Potlatch 2"/>', name: 'in_potlatch', width: 20, sortable: true, align: 'center' },
                //   { display: '<img src="/img/sources/merkaartor.16.png" alt="Merkaartor" title="Merkaartor"/>', name: 'in_merkaartor', width: 20, sortable: true, align: 'center' },
                { display: '<span title="Number of different values for this key">Values</span>', name: 'values_all', width: 70, sortable: true, align: 'right' },
                { display: 'Prevalent Values', name: 'prevalent_values', width: 500, sortable: true }
            ],
            searchitems: [
                { display: texts.osm.key, name: 'key' }
            ],
            sortname: 'count_all',
            sortorder: 'desc',
            preProcess: function(data) {
                data.rows = jQuery.map(data.data, function(row, i) {
                    return { 'cell': [
                        link_to_key(row.key),
                        print_value_with_percent(row.count_all,       row.count_all_fraction),
                        print_with_ts(row.users_all),
                        row.in_wiki       ? '&#x2714;' : '-',
                        row.in_josm       ? '&#x2714;' : '-',
                    //       row.in_potlatch   ? '&#x2714;' : '-',
                    //       row.in_merkaartor ? '&#x2714;' : '-',
                        print_with_ts(row.values_all),
                        print_prevalent_value_list(row.key, row.prevalent_values)
                    ] };
                });
                return data;
            }
        });
    }
};

function page_init() {
    init_tabs([]);

    var data = <%= i = '@'; %w(plain colon letters space problem rest).map{ |type| i=i.next; [ { :label => i, :value => @db.stats('characters_in_keys_' + type) } ] }.to_json %>;

    var w=968, h=50;

    var vis = new pv.Panel()
        .canvas('canvas')
        .width(w + 20)
        .height(h);

    var colors = <%= { :A => '#2ca02c', :B => '#98df8a', :C => '#dbdb8d', :D => '#d62728', :E => '#ff9896', :F => '#aec7e8' }.to_json %>;

    var scale = pv.Scale.linear(0, <%= @db.stats('num_keys') %>).range(0, w);

    vis.add(pv.Layout.Stack)
        .orient('left-top')
        .left(10)
        .layers(data)
        .x(10)
        .y(function(d) { return scale(d.value); })
    .layer.add(pv.Bar)
        .fillStyle(function(d) { return colors[d.label]; })
        .height(20)
    .anchor('bottom')
        .add(pv.Label)
        .font('12px Arial,sans-serif')
        .top(46)
        .text(function(d) { return d.label; });

    vis.render();
}
